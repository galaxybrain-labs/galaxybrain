[tool.poetry]
name = "griptape"
version = "0.17.1"
description = "Modular Python framework for LLM workflows, tools, memory, and data."
authors = ["Griptape <hello@griptape.ai>"]
license = "Apache 2.0"
readme = "README.md"
repository = "https://github.com/griptape-ai/griptape"

packages = [
    {include = "griptape"}
]

[tool.poetry.dependencies]
python = "^3.9"
openai = ">=0.27"
jinja2 = ">=3.1"
attrs = ">=22"
jsonschema = ">=4"
marshmallow = ">=3"
marshmallow-enum = ">=1.5"
tiktoken = ">=0.3"
rich = ">=13"
pyyaml = ">=6"
schema = ">=0.7"
tenacity = ">=8.0"
numpy = ">=1"

cohere = { version = ">=4", optional = true }
anthropic = { version = "^0.3.0", optional = true }
transformers = { version = "^4.30", optional = true }
huggingface-hub = { version = ">=0.13", optional = true }
boto3 = { version = "^1.28.2", optional = true }
PyPDF2 = { version = ">=3", optional = true }
trafilatura = { version = ">= 1.6", optional = true }
pandas = { version = "^2.1.0", optional = true }
sqlalchemy = { version = "~=1.0", optional = true }
sqlalchemy-redshift = { version = "*", optional = true }
pinecone-client = { version = ">=2", optional = true }
snowflake-sqlalchemy = { version = "^1.4.7", optional = true }
pymongo = { version = "*", optional = true }
marqo = { version = ">=1.1.0", optional = true }
redis = { version = "^4.6.0", optional = true }
opensearch-py = { version = "^2.3.1", optional = true }
requests-aws4auth = { version = "1.2.3", optional = true }
stringcase = { version = "^1.2.0", optional = true }
docker = { version = "^6.1.3", optional = true }


[tool.poetry.extras]
drivers-prompt-cohere = ["cohere"]
drivers-prompt-anthropic = ["anthropic"]
drivers-prompt-huggingface = ["huggingface-hub", "transformers"]
drivers-prompt-aws = ["boto3", "anthropic"]

tokenizers-huggingface = ["transformers"]
tokenizers-cohere = ["cohere"]

drivers-sql-base = ["sqlalchemy"]
drivers-sql-redshift = ["sqlalchemy", "sqlalchemy-redshift", "boto3"]
drivers-sql-snowflake = ["sqlalchemy", "snowflake-sqlalchemy", "snowflake"]

drivers-conversation-memory-aws = ["boto3"]

drivers-vector-store-marqo = ["marqo"]
drivers-vector-store-pinecone = ["pinecone-client"]
drivers-vector-store-mongodb = ["pymongo"]
drivers-vector-store-redis = ["redis"]
drivers-vector-store-opensearch = ["opensearch-py"]
drivers-vector-store-opensearch-aws = ["opensearch-py", "boto3", "requests-aws4auth"]

tools-computer = ["stringcase", "docker"]

loaders-pdf = ["PyPDF2"]
loaders-web = ["trafilatura"]
loaders-dataframe = ["pandas"]

all = [
    "cohere",
    "anthropic",
    "hugginface-hub",
    "transformers",
    "sqlalchemy",
    "sqlalchemy-redshift",
    "boto3",
    "snowflake-sqlalchemy",
    "snowflake",
    "marqo",
    "pinecone-client",
    "pymongo",
    "redis",
    "opensearch-py",
    "requests-aws4auth",
    "stringcase",
    "docker",
    "PyPDF2",
    "trafilatura",
    "pandas",
]

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "~=7.1"
pytest-mock = "*"
mongomock = "*"

twine = ">=4"
moto = {extras = ["dynamodb"], version = "^4.1.8"}
pytest-xdist = "^3.3.1"
pytest-cov = "^4.1.0"
fuzzywuzzy = "^0.18.0"


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.286"
black = "^23.7.0"
pyright = "^1.1.324"

[tool.black]
line-length=120

[tool.ruff]
line-length=120

[tool.pyright]
include = ["griptape"]
exclude = [
    "**/__pycache__",
]
pythonVersion = "3.9"
reportOptionalMemberAccess = "none"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
