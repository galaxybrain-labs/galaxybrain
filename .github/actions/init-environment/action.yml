name: "Init Environment"
description: "Initialize environment for tests"
runs:
  using: "composite"
  steps:
      - name: Checkout actions
        uses: actions/checkout@v4

      - id: setup-python
        name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --with test --with dev --with docs --all-extras
        shell: bash
      - name: Activate venv 
        run: |
          source $VENV
          echo PATH=$PATH >> $GITHUB_ENV
        shell: bash

      - name: Get installed Playwright version
        id: playwright-version
        run: |
          version=$(poetry run playwright/ -V | awk '{print $2}' | tr -d '\n')
          echo "version=$version" >> $GITHUB_OUTPUT
        shell: bash
      
      - uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ${{ matrix.os == 'windows-latest' && '~\\AppData\\Local\\ms-playwright' || '~/.cache/ms-playwright' }}
          key: '${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}'

      - name: Install playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: playwright install --with-deps
        shell: bash
